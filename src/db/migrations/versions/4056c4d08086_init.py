"""init

Revision ID: 4056c4d08086
Revises: 
Create Date: 2025-10-10 13:56:42.483169

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '4056c4d08086'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('deleted_object',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('object_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('name_metadata', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('object_id', 'name_metadata')
    )
    op.create_table('dm_goods_expense_alloc',
    sa.Column('registrar_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('goods_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('cost_category_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('department_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('type_expense', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('amount', sa.Numeric(), nullable=False),
    sa.PrimaryKeyConstraint('registrar_id', 'goods_id', 'cost_category_id', 'department_id', 'date'),
    postgresql_partition_by='RANGE (date)'
    )
    op.create_index('ix_dm_alloc_goods', 'dm_goods_expense_alloc', ['goods_id', 'date'], unique=False)
    op.create_index('ix_dm_alloc_registrar_date', 'dm_goods_expense_alloc', ['registrar_id', 'date'], unique=False)
    op.create_index('ix_dm_alloc_registrar_type', 'dm_goods_expense_alloc', ['registrar_id', 'type_expense'], unique=False)
    op.create_table('doc_additional_costs',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('view_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_additional_transfer_costs',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('view_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_barcode_recalculation',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('view_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_debt_return',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('view_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_delivery_transfer',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('view_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_discounts_on_goods',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('view_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_express_acceptance_recalculation_link',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('view_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_freight_rate_change',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('view_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_goods_acceptance_correction',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('view_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_goods_return',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('view_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_link_goods_receipts',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('receipt_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('goods_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.PrimaryKeyConstraint('receipt_id', 'goods_id')
    )
    op.create_table('doc_link_goods_transfers',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('transfer_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('goods_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.PrimaryKeyConstraint('transfer_id', 'goods_id')
    )
    op.create_index('ix_gt_goods_id', 'doc_link_goods_transfers', ['goods_id'], unique=False)
    op.create_index('ix_gt_transfer_id', 'doc_link_goods_transfers', ['transfer_id'], unique=False)
    op.create_table('doc_mutual_settlement_correction',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('view_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_payment_receipt',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('view_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_payment_return_link',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('view_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_receipts',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('warehouse_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('client_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('shop_address', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('shop_phone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('shop_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('view_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id', 'date')
    )
    op.create_table('doc_registers_adjustment',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('view_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doc_transfers',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('type_transfer', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('out_warehouse_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('in_warehouse_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('route_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('transport_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('document_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('cargo_category_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('view_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id', 'date'),
    postgresql_partition_by='RANGE (date)'
    )
    op.create_index('ix_tr_date', 'doc_transfers', ['date'], unique=False)
    op.create_table('etl_job_status',
    sa.Column('job_name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('last_success_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('job_name')
    )
    op.create_table('ref_cargo_categories',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ref_cities',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('country_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ref_clients',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('client_lastname', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('client_firstname', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('client_passport_number', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('client_passport_series', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('client_phone_telegram', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('client_phone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('repr_lastname', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('repr_firstname', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('repr_passport_series', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('repr_passport_number', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('repr_phone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('rg_lastname', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('rg_passport_series', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('rg_passport_number', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('rg_phone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('rg_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ref_cost_categories',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ref_counterparties',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ref_countries',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ref_departments',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ref_goods',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('barcode', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('receipt_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('client_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('package_type_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('goods_type_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('volume', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('length', sa.Float(), nullable=True),
    sa.Column('width', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('price_per_m3', sa.Float(), nullable=True),
    sa.Column('price_per_ton', sa.Float(), nullable=True),
    sa.Column('amount', sa.Numeric(), nullable=True),
    sa.Column('is_mail', sa.Boolean(), nullable=True),
    sa.Column('is_return', sa.Boolean(), nullable=True),
    sa.Column('by_weight', sa.Boolean(), nullable=True),
    sa.Column('place_number', sa.Integer(), nullable=True),
    sa.Column('total_places', sa.Integer(), nullable=True),
    sa.Column('order_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('days_in_transit', sa.Integer(), nullable=True),
    sa.Column('arrival_date', sa.DateTime(), nullable=True),
    sa.Column('total_amount', sa.Numeric(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ref_goods_types',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('is_group', sa.Boolean(), nullable=True),
    sa.Column('cargo_category_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('parent_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ref_package_types',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ref_price_types',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('movement_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ref_routes',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('out_city_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('in_city_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ref_transports',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('type_transport_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ref_types_transport',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ref_warehouses',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('city_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('country_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('department_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('telegram_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('customs', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_wh_country_id', 'ref_warehouses', ['country_id'], unique=False)
    op.create_index('ix_wh_department_id', 'ref_warehouses', ['department_id'], unique=False)
    op.create_table('reg_cost_and_payment_goods',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('registrar_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('goods_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('registrar_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('price_type_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('storno', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('registrar_id', 'date', 'goods_id', 'registrar_type')
    )
    op.create_table('reg_direct_expenses',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('registrar_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('goods_doc_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('registrar_type', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.Column('goods_doc_type', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=True),
    sa.Column('cost_category_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('route_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('department_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('amount', sa.Numeric(), nullable=True),
    sa.PrimaryKeyConstraint('registrar_id', 'goods_doc_id', 'date', 'registrar_type', 'cost_category_id'),
    postgresql_partition_by='RANGE (date)'
    )
    op.create_index('ix_de_goods_doc_id', 'reg_direct_expenses', ['goods_doc_id'], unique=False)
    op.create_table('reg_general_expenses',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('registrar_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('cost_category_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('is_previous_period', sa.Boolean(), nullable=True),
    sa.Column('amount', sa.Numeric(), nullable=True),
    sa.PrimaryKeyConstraint('registrar_id', 'date', 'cost_category_id'),
    postgresql_partition_by='RANGE (date)'
    )
    op.create_table('reg_goods_location',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('registrar_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('goods_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('registrar_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('warehouse_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('car_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('arrival_route_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('sender_warehouse_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('goods_status', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('registrar_id', 'date', 'goods_id', 'registrar_type')
    )
    op.create_table('reg_warehouse_expenses',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('UTC', now())"), nullable=False),
    sa.Column('registrar_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('movement_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('organization_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('cost_category_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('department_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('amount', sa.Numeric(), nullable=True),
    sa.Column('storno', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('registrar_id', 'date', 'cost_category_id'),
    postgresql_partition_by='RANGE (date)'
    )
    op.create_index('ix_we_department_id', 'reg_warehouse_expenses', ['department_id'], unique=False)
    op.create_table('telegram_chats',
    sa.Column('telegram_id', sa.Integer(), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('telegram_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('telegram_chats')
    op.drop_index('ix_we_department_id', table_name='reg_warehouse_expenses')
    op.drop_table('reg_warehouse_expenses')
    op.drop_table('reg_goods_location')
    op.drop_table('reg_general_expenses')
    op.drop_index('ix_de_goods_doc_id', table_name='reg_direct_expenses')
    op.drop_table('reg_direct_expenses')
    op.drop_table('reg_cost_and_payment_goods')
    op.drop_index('ix_wh_department_id', table_name='ref_warehouses')
    op.drop_index('ix_wh_country_id', table_name='ref_warehouses')
    op.drop_table('ref_warehouses')
    op.drop_table('ref_types_transport')
    op.drop_table('ref_transports')
    op.drop_table('ref_routes')
    op.drop_table('ref_price_types')
    op.drop_table('ref_package_types')
    op.drop_table('ref_goods_types')
    op.drop_table('ref_goods')
    op.drop_table('ref_departments')
    op.drop_table('ref_countries')
    op.drop_table('ref_counterparties')
    op.drop_table('ref_cost_categories')
    op.drop_table('ref_clients')
    op.drop_table('ref_cities')
    op.drop_table('ref_cargo_categories')
    op.drop_table('etl_job_status')
    op.drop_index('ix_tr_date', table_name='doc_transfers')
    op.drop_table('doc_transfers')
    op.drop_table('doc_registers_adjustment')
    op.drop_table('doc_receipts')
    op.drop_table('doc_payment_return_link')
    op.drop_table('doc_payment_receipt')
    op.drop_table('doc_mutual_settlement_correction')
    op.drop_index('ix_gt_transfer_id', table_name='doc_link_goods_transfers')
    op.drop_index('ix_gt_goods_id', table_name='doc_link_goods_transfers')
    op.drop_table('doc_link_goods_transfers')
    op.drop_table('doc_link_goods_receipts')
    op.drop_table('doc_goods_return')
    op.drop_table('doc_goods_acceptance_correction')
    op.drop_table('doc_freight_rate_change')
    op.drop_table('doc_express_acceptance_recalculation_link')
    op.drop_table('doc_discounts_on_goods')
    op.drop_table('doc_delivery_transfer')
    op.drop_table('doc_debt_return')
    op.drop_table('doc_barcode_recalculation')
    op.drop_table('doc_additional_transfer_costs')
    op.drop_table('doc_additional_costs')
    op.drop_index('ix_dm_alloc_registrar_type', table_name='dm_goods_expense_alloc')
    op.drop_index('ix_dm_alloc_registrar_date', table_name='dm_goods_expense_alloc')
    op.drop_index('ix_dm_alloc_goods', table_name='dm_goods_expense_alloc')
    op.drop_table('dm_goods_expense_alloc')
    op.drop_table('deleted_object')
    # ### end Alembic commands ###
